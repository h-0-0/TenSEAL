name: Build and release wheels

on:
  push:
    tags:
      - "v*"
  workflow_dispatch: {}

jobs:
  build-wheels:
    name: Build wheels (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Enable QEMU (for aarch64 on Linux)
        if: matrix.os == 'ubuntu-latest'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Install cibuildwheel
        run: |
          python -m pip install --upgrade pip
          python -m pip install cibuildwheel

      - name: Build wheels
        env:
          # Build CPython 3.8 and 3.9 wheels; skip PyPy and musllinux
          CIBW_BUILD: "cp38-* cp39-*"
          CIBW_SKIP: "pp* *musllinux*"
          # Install cmake<4 in the build environment to avoid policy issues
          CIBW_BEFORE_BUILD: "python -m pip install --upgrade pip && pip install 'cmake<4'"
          # Build for both x86_64 and aarch64 on Linux, and both on macOS
          CIBW_ARCHS_LINUX: "x86_64 aarch64"
          CIBW_ARCHS_MACOS: "x86_64 arm64"
          # Set deployment target for macOS 11+ to satisfy delocate's expectations
          MACOSX_DEPLOYMENT_TARGET: "11.0"
          # Use manylinux2014 (default), OK for cp38/cp39
        run: |
          python -m cibuildwheel --output-dir wheelhouse

      - name: Upload wheels (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: wheelhouse-${{ matrix.os }}
          path: wheelhouse/*.whl

  release:
    name: Create GitHub Release and attach wheels
    needs: [build-wheels]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Download all wheel artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Gather wheels
        run: |
          mkdir -p upload
          find dist -name "*.whl" -exec cp {} upload/ \;
          ls -al upload

      - name: Create Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: upload/*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


