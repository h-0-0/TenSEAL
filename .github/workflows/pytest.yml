name: Pytest

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch: {}

jobs:
  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Sync and update submodules (recursive)
        run: |
          git submodule sync --recursive
          git submodule update --init --recursive

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Prepare ENV (Ubuntu)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          echo "CC=clang" >> $GITHUB_ENV
          echo "CXX=clang++" >> $GITHUB_ENV

      - name: Install dependencies (Ubuntu)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: .github/workflows/scripts/install_req_ubuntu.sh

      - name: Install dependencies (macOS)
        if: ${{ matrix.os == 'macos-latest' }}
        run: .github/workflows/scripts/install_req_macos.sh

      - name: Install dependencies (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: .github/workflows/scripts/install_req_windows.bat

      - name: Setup msbuild (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        uses: microsoft/setup-msbuild@v2

      - name: Enable git long paths (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: git config --system core.longpaths true

      - name: Build the library (non-Windows)
        if: ${{ matrix.os != 'windows-latest' }}
        run: .github/workflows/scripts/build_nix.sh

      - name: Build the library (Windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: .github/workflows/scripts/build_windows.bat

      - name: Run pytest (tenseal)
        run: pytest -m "not slow" -v ./tests/python/tenseal

      - name: Run pytest (sealapi)
        run: pytest -v ./tests/python/sealapi


